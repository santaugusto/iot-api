| Dia | Tarefa                                         |
| --- | ---------------------------------------------- |
| 1   | Setup NestJS + Docker + TypeORM + Swagger      |
| 2   | Entidades, migrations e conex√£o com DB         |
| 3   | Criar comandos/handlers e endpoints de leitura |
| 4   | Autentica√ß√£o JWT                               |
| 5   | Filtros + agrega√ß√µes                           |
| 6   | Testes + documenta√ß√£o                          |
| 7   | Revis√£o final + entrega (GitHub ou ZIP)        |


| Funcionalidade                              | Status      | Observa√ß√µes                                                 |
| ------------------------------------------- | ----------- | ----------------------------------------------------------- |
| Cadastro de sensores                        | ‚úÖ Feito     | `POST /sensors` via CQRS                                    |
| Listagem de sensores                        | ‚úÖ Feito     | `GET /sensors`                                              |
| Cadastro de leitura de sensores             | ‚úÖ Feito     | `POST /readings` com `sensorId`, `value`, `timestamp`       |
| Valida√ß√£o de campos (DTO + class-validator) | ‚úÖ Feito     | Erros 400 quando inv√°lido                                   |
| Listagem de leituras com filtros            | ‚úÖ Pendente | Deve aceitar `sensorId`, `type`, `dataInicial`, `dataFinal` |
| Estat√≠sticas (m√©dia, m√≠n, m√°x por sensor)   | üî≤ Pendente | Ex: `GET /readings/stats?sensorId=xxx&start=...&end=...`    |


| Recurso                                    | Status    | Observa√ß√µes                                           |
| ------------------------------------------ | --------- | ----------------------------------------------------- |
| Estrutura modular com NestJS + CQRS        | ‚úÖ Feito   | `@nestjs/cqrs` com comandos e queries                 |
| Dockerfile                                 | ‚úÖ Feito   | Dockerfile funcional                                  |
| docker-compose com PostgreSQL              | ‚úÖ Feito   | Banco roda junto via compose                          |
| Vari√°veis de ambiente com `@nestjs/config` | ‚úÖ Feito   | Usa `.env` e `ConfigModule` global                    |
| Migrations autom√°ticas (TypeORM)           | ‚úÖ Parcial | Usa `synchronize: true` (n√£o recomendado em produ√ß√£o) |


| Testes               | Status      | Observa√ß√µes                                    |
| -------------------- | ----------- | ---------------------------------------------- |
| Testes unit√°rios     | üî≤ Pendente | Ainda n√£o foram definidos arquivos `*.spec.ts` |
| Testes de integra√ß√£o | üî≤ Pendente | Especialmente para comandos/queries            |


| Seguran√ßa                      | Status      | Observa√ß√µes                    |
| ------------------------------ | ----------- | ------------------------------ |
| Middleware de autentica√ß√£o/JWT | üî≤ Pendente | N√£o foi implementado ainda     |
| Valida√ß√£o b√°sica de entrada    | ‚úÖ Feito     | Com `class-validator` nos DTOs |
