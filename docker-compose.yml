services:
  iot-db:
    image: postgres:15
    container_name: iot-db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: senha123
      POSTGRES_DB: iot_database
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5
  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  iot-api:
    container_name: iot-api
    build: .
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      iot-db:
        condition: service_healthy
    environment:
      DB_HOST: iot-db
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: senha123
      DB_DATABASE: iot_database
    volumes:
      - .:/app
    working_dir: /app
    command: npm run start:dev

volumes:
  postgres_data:
  esdata:
